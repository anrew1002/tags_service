version: '3'

networks:
  asupd:
volumes:
  mariadbvol:
  caddy_data:
  caddy_config:


services:
  app:
    container_name: tag-container
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "1090:1090"
    # restart: unless-stopped
    depends_on:
      - migrate
    networks:
      - asupd
  migrate:
    image: migrate/migrate
    volumes:
        - ./migrations:/migrations
    command: ["-database", "mysql://tag_service:password@tcp(tag-mariadb:3306)/tag_service", "-path", "/migrations", "up"]
    depends_on:                     
      mariadb:
        condition: service_healthy
    networks:
      - asupd
    tty: true
  mariadb:
    container_name: tag-mariadb
    image: "mariadb:11.2"
    restart: unless-stopped
    networks:
      - asupd
    environment:
      MARIADB_DATABASE: tag_service
      MARIADB_USER: tag_service
      MARIADB_PASSWORD: password
      MARIADB_RANDOM_ROOT_PASSWORD: 1
    volumes:
      - mariadbvol:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
  caddy:
    image: caddy:2.7.6-alpine
    restart: unless-stopped
    networks:
      - asupd
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
  adminer:
    image: adminer:latest
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: tag-mariadb
    restart: always
    ports:
      - 7777:8080



